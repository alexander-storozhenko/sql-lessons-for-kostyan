#!/usr/bin/env ruby

require_relative 'connection'

DB_NAME = 'sql_lessons'

return drop_db(DB_NAME) if !ARGV.include?('createdb') && ARGV.include?('dropdb')

drop_db(DB_NAME) if ARGV.include?('dropdb')
create_db(DB_NAME) if ARGV.include?('createdb')

connect(DB_NAME)

run_script('create_tables')
run_script('insert_values')

# -------------- BASE --------------

run_with_values('select * from users')
run_with_values('select * from accounts')
run_with_values('select extract(second from created_on) from users')
run_with_values('select uid, number from mobile_devices')

# -------------- JSON --------------

run_with_values("select id, data->'brand' from mobile_devices where (data->>'brand') = 'apple';")
run_with_values("select id, data->'connection_cnt' from mobile_devices where (data->>'connection_cnt')::integer > 10;")
run_with_values("select id, data->'connection_cnt' from mobile_devices where (data->>'connection_cnt')::integer > 10;")

# -------------- Order --------------

run_with_values("select id from mobile_devices order by id asc")

# -------------- Like --------------

run_with_values("select id from users where email like '%b@a%'")
run_with_values("select id from users where username like 'bog___'")
run_with_values("select id from users where username like '_ogda_'")
run_with_values("select id from users where username like '_og%'")

run_with_values("select id from users where username like 'BOGDA_'")
run_with_values("select id from users where username ilike 'BOGDA_'")
run_with_values("select id from users where username not like 'valera'")
# it equals...
run_with_values("select id from users where username ~~ 'BOGDA_'")
run_with_values("select id from users where username ~~* 'BOGDA_'")
run_with_values("select id from users where username !~~ 'valera'")

# -------------- Join --------------
run_script_with_values('join')

### NOTES

# CREATE TABLE customers(
#                customer_id INT GENERATED ALWAYS AS IDENTITY,
# -> return JSON, ->> return text
# B-tree, Hash, GiST, SP-GiST and GIN
#
# having(where after group by), group by, order, like, any(SELECT * FROM mytable WHERE 'Book' = ANY(pub_types);), exists
# join
# insert update delete
# transaction